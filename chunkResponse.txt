void setChunkedResponse(Response &response, std::string filename, unsigned int code) {
    std::ostringstream ss;
    if (response.getState() == 1) {
        response.setStatus(code);
        ss << "HTTP/1.1 " << code << " " << response.getStatus() << "\r\n";
        ss << "Content-Type: " << response.getMimeType(filename.substr(filename.find_last_of('.') + 1)) << "\r\n";
        ss << "Transfer-Encoding: chunked\r\n";
        response.setResponseEntity(ss.str());
        response.setState(2);
    } else if (response.getState() == 2) {
        response.setResponseEntity("");
        std::ifstream file(filename);
        if (!file.is_open()) {
            response.setState(-1);
            ss << "HTTP/1.1" << NOT_FOUND << "Not Found\r\n";
            response.setResponseEntity(ss.str());
            return ;
        }
        if (response.getFileOffset() != 0) {
            file.seekg(response.getFileOffset());
        }
        int buffersize = 100;
        char buffer[buffersize - 1];
        file.read(buffer, buffersize);
        std::streamsize bytesread = file.gcount();
        buffer[bytesread] = '\0';
        response.setFileOffset(response.getFileOffset() + bytesread);
        ss << std::hex << bytesread + 2 << "\r\n" << buffer << "\r\n";
        if (file.eof()) {
            ss << "0\r\n\r\n";
            response.setState(-1);
        }
        response.setResponseEntity(ss.str());
        file.close();
    }
}


